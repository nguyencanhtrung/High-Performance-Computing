{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww25400\viewh14580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -- Trung C. Nguyen  NOTE--\
Dec 7, 2016\
-----------------------------------------------\
Fundamental GPU algorithm\
+ Reduce\
+ Scan\
+ Histogram\
\
==========================\
Important parameter\
- Steps: How long it take to complete a particular a job  --- relating to timing\
- Works: How many computation need to finish a job     --- relating to resource\
\
Two costes:\
	Work complexity : when we change the size of input how affect to number of work to complete the job\
		O(n) : linear dependency; double amount of input size => double amount of work\
		O(1): independent\
	Step complexity: Same work but apply for number of step\
\
REDUCTION\
	Condition for a job is called a reduction:\
	- Using reduction operator (having 2 characteristics: binary operator (2 inputs -> 1 outputs) - not unary and associativity a + (b + c) = (a + b) + c\
	- Input Set of elements\
\
	Serial reduction 									\
		Work complexity : O(n)\
		Step complexity : O(n)\
	\
	Parallel reduction\
		Work complexity: O(n)\
		Step complexity: O(log2(n))\
\
	Talking about accumulation algorithm in GPU\
		Using __shared__ memory as a intermediate region to accumulate => Reduce  1/3 as much global memory bandwidth as the golbal memory version\
\
		\
SCAN \
	- input: 			1, 2, 3, 4\
	_ operator: such as add	\
	- Output 			1, 3, 6, 10 		output[0] = input[0] ;  output[i] = input[i] + output[i - 1]         \
\
	Binary operator\
	Associativity\
	Inputs to scan:\
	Identity element\
	\
	Exclusive scan output: Output of current position = apply operator on all inputs before it not includes the input in current position\
	Inclusive scan output: same with exculusive but include current element}